<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(obj_player){
    top = 9    

    //set font and color
    draw_set_font(font_main);
    draw_set_colour(make_colour_rgb(133, 133, 133));
    
    //draw score
    draw_text(view_xview[0] + 285, view_yview[0] + top, obj_player.score1 );
    
    //draw health and lives
    draw_sprite(spr_health_bar,0,view_xview[0]+2, view_yview[0] + 2);
    draw_text(view_xview[0] + 131, view_yview[0] + top, "X" );
    draw_text(view_xview[0] + 152, view_yview[0] + top, obj_player.live);
    
    //draw coins    
    draw_sprite(spr_coin_screen,0,view_xview[0]+490, view_yview[0] );
    draw_text(view_xview[0] + 520, view_yview[0] + top , "X" );
    draw_text(view_xview[0] + 538, view_yview[0] + top  , obj_player.coins);
    
    //draw bar shoot
    switch(obj_player.bullet){
        case 0: draw_sprite(spr_bar_shoot,16,view_xview[0]+2, view_yview[0] + 48); break;
        case 1: draw_sprite(spr_bar_shoot,14,view_xview[0]+2, view_yview[0] + 48); break;
        case 2: draw_sprite(spr_bar_shoot,14,view_xview[0]+2, view_yview[0] + 48); break;
        case 3: draw_sprite(spr_bar_shoot,13,view_xview[0]+2, view_yview[0] + 48); break;
        case 4: draw_sprite(spr_bar_shoot,12,view_xview[0]+2, view_yview[0] + 48); break;
        case 5: draw_sprite(spr_bar_shoot,11,view_xview[0]+2, view_yview[0] + 48); break;
        case 6: draw_sprite(spr_bar_shoot,10,view_xview[0]+2, view_yview[0] + 48); break;
        case 7: draw_sprite(spr_bar_shoot,9,view_xview[0]+2, view_yview[0] + 48); break;
        case 8: draw_sprite(spr_bar_shoot,8,view_xview[0]+2, view_yview[0] + 48); break;
        case 9: draw_sprite(spr_bar_shoot,7,view_xview[0]+2, view_yview[0] + 48); break;
        case 10: draw_sprite(spr_bar_shoot,6,view_xview[0]+2, view_yview[0] + 48); break;
        case 11: draw_sprite(spr_bar_shoot,5,view_xview[0]+2, view_yview[0] + 48); break;
        case 12: draw_sprite(spr_bar_shoot,4,view_xview[0]+2, view_yview[0] + 48); break;
        case 13: draw_sprite(spr_bar_shoot,3,view_xview[0]+2, view_yview[0] + 48); break;
        case 14: draw_sprite(spr_bar_shoot,2,view_xview[0]+2, view_yview[0] + 48); break;
        case 15: draw_sprite(spr_bar_shoot,1,view_xview[0]+2, view_yview[0] + 48); break;
        case 16: draw_sprite(spr_bar_shoot,0,view_xview[0]+2, view_yview[0] + 48); break;
        
    }   
    
    //draw bar shoot max
    if (obj_player.gum = 2){
    if (obj_player.bullet_max &lt;= 28 and obj_player.bullet_max &gt;= 24) {
         draw_sprite(spr_bar_shoot_max,0,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 23 and obj_player.bullet_max &gt;= 21 {
        draw_sprite(spr_bar_shoot_max,2,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 20 and obj_player.bullet_max &gt;= 17 {
        draw_sprite(spr_bar_shoot_max,5,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 16 and obj_player.bullet_max &gt;= 13 {
        draw_sprite(spr_bar_shoot_max,7,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 12 and obj_player.bullet_max &gt;= 9 {
        draw_sprite(spr_bar_shoot_max,10,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 8 and obj_player.bullet_max &gt;= 5 {
        draw_sprite(spr_bar_shoot_max,14,view_xview[0]+2, view_yview[0] + 66);
    }
    else  if obj_player.bullet_max &lt;= 4 and obj_player.bullet_max &gt;= 1 {
        draw_sprite(spr_bar_shoot_max,16,view_xview[0]+2, view_yview[0] + 66);
    }}
    
    //draw bar fly
    if obj_player.canFly = 1{
        if (obj_player.timeFly = 8 ) {
            draw_sprite(spr_bar_fly,1,view_xview[0]+2, view_yview[0] + 84);
        }
        else if (obj_player.timeFly = 7 ) {
            draw_sprite(spr_bar_fly,3,view_xview[0]+2, view_yview[0] + 84);
        }
        else if (obj_player.timeFly = 6 ) {
            draw_sprite(spr_bar_fly,5,view_xview[0]+2, view_yview[0] + 84);
        }
        else if (obj_player.timeFly = 5 ) {
            draw_sprite(spr_bar_fly,7,view_xview[0]+2, view_yview[0] + 84);
        }
         else if (obj_player.timeFly = 4 ) {
            draw_sprite(spr_bar_fly,9,view_xview[0]+2, view_yview[0] + 84);
        }
         else if (obj_player.timeFly = 3 ) {
            draw_sprite(spr_bar_fly,11,view_xview[0]+2, view_yview[0] + 84);
        }
         else if (obj_player.timeFly = 2 ) {
            draw_sprite(spr_bar_fly,13,view_xview[0]+2, view_yview[0] + 84);
        }
         else if (obj_player.timeFly = 1 ) {
            draw_sprite(spr_bar_fly,15,view_xview[0]+2, view_yview[0] + 84);
        }
        if (obj_player.timeFly = 0 ) {
            draw_sprite(spr_bar_fly,17,view_xview[0]+2, view_yview[0] + 84);
        }
    }            
    //draw bar inmunity
    //bar_shoot = draw_sprite(spr_bar_inmunity,0-16,view_xview[0]+2, view_yview[0] + 102);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
